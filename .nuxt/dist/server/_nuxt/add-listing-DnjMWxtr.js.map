{"version":3,"file":"add-listing-DnjMWxtr.js","sources":["../../../../pages/add-listing.vue"],"sourcesContent":["<template>\n  <!-- ================================\n     START BREADCRUMB AREA\n ================================= -->\n <section class=\"breadcrumb-area bread-bg\">\n       <div class=\"overlay\"></div>\n       <!-- end overlay -->\n       <div class=\"container\">\n         <div class=\"breadcrumb-content text-center\">\n           <h2 class=\"sec__title text-white mb-3\">Add Listing</h2>\n           <ul class=\"bread-list\">\n             <li><a href=\"index.html\">home</a></li>\n             <li>listing</li>\n             <li>Add Listing</li>\n           </ul>\n         </div>\n         <!-- end breadcrumb-content -->\n       </div>\n       <!-- end container -->\n       <div class=\"bread-svg\">\n         <svg viewBox=\"0 0 500 150\" preserveAspectRatio=\"none\">\n           <path\n             d=\"M-4.22,89.30 C280.19,26.14 324.21,125.81 511.00,41.94 L500.00,150.00 L0.00,150.00 Z\"\n           ></path>\n         </svg>\n       </div>\n       <!-- end bread-svg -->\n     </section>\n     <!-- end breadcrumb-area -->\n     <!-- ================================\n     END BREADCRUMB AREA\n ================================= -->\n \n     <!-- ================================\n     START ADD-LISTING AREA\n ================================= -->\n     <section class=\"add-listing-area padding-top-60px padding-bottom-90px\">\n       <div class=\"container\">\n         <div class=\"alert alert-info fade show mb-4\" role=\"alert\">\n           <p>\n             <strong class=\"font-weight-semi-bold\"\n               >Returning User? Please</strong\n             >\n             <a href=\"login.html\" class=\"alert-link font-weight-semi-bold\"\n               >log in</a\n             >\n             and if you are a New User, Continue Below and register along with\n             this submission.\n           </p>\n         </div>\n         <form @submit.prevent=\"addEvent\">\n           <div class=\"card\">\n             <div class=\"card-body\">\n               <h4 class=\"card-title mb-3\">Basic Information</h4>\n               <hr class=\"border-top-gray my-0\" />\n               <div class=\"row mt-4\">\n           <div class=\"col-lg-6\">\n             <div class=\"form-group\">\n               <label class=\"label-text\">Title <span class=\"required\">*</span></label>\n               <input\n                 class=\"form-control form--control ps-3\"\n                 type=\"text\"\n                 v-model=\"formData.title\"\n                 placeholder=\"Title\"\n                 required\n               />\n             </div>\n           </div>\n           <div class=\"col-lg-6\">\n                <div class=\"form-group\">\n                  <label class=\"label-text\">Event Type <span class=\"required\">*</span></label>\n                  <select\n                    class=\"form-control form--control ps-3\"\n                    v-model=\"formData.event_type\"\n                    @change=\"checkEventType\"\n                    required\n                  >\n                    <option value=\"online\">Online</option>\n                    <option value=\"physical\">Physical</option>\n                    <option value=\"hybrid\">Hybrid</option>\n                  </select>\n                </div>\n              </div>\n\n              <!-- Country and Venue Fields -->\n              <div v-if=\"showLocationFields\" class=\"col-lg-6\">\n                <div class=\"form-group\">\n                  <label class=\"label-text\">Country <span class=\"required\">*</span></label>\n                  <select\n                    class=\"form-control form--control ps-3\"\n                    v-model=\"formData.country\"\n                    @change=\"fetchVenues\"\n                    required\n                  >\n                    <option v-for=\"country in countries\" :key=\"country.code\" :value=\"country.id\">\n                      {{ country.name }}\n                    </option>\n                  </select>\n                </div>\n              </div>\n\n              <div v-if=\"showLocationFields\" class=\"col-lg-6\">\n                <div class=\"form-group\">\n                  <label class=\"label-text\">Venue <span class=\"required\">*</span></label>\n                  <select\n                    class=\"form-control form--control ps-3\"\n                    v-model=\"formData.venue\"\n                    required\n                  >\n                    <option v-for=\"venue in venues\" :key=\"venue.id\" :value=\"venue.id\">\n                      {{ venue.venue_name }}\n                    </option>\n                  </select>\n                </div>\n              </div>\n              <!-- Event Date From -->\n              <div class=\"col-lg-6\">\n            <div class=\"form-group\">\n              <label class=\"label-text\">Event Date From <span class=\"required\">*</span></label>\n              <input\n                class=\"form-control form--control ps-3\"\n                type=\"date\"\n                v-model=\"formData.event_date_from\"\n                required\n              />\n            </div>\n          </div>\n\n          <!-- Event Date To -->\n          <div class=\"col-lg-6\">\n            <div class=\"form-group\">\n              <label class=\"label-text\">Event Date To <span class=\"required\">*</span></label>\n              <input\n                class=\"form-control form--control ps-3\"\n                type=\"date\"\n                v-model=\"formData.event_date_to\"\n                required\n              />\n            </div>\n          </div>\n\n          <!-- Event Time From -->\n          <div class=\"col-lg-6\">\n            <div class=\"form-group\">\n              <label class=\"label-text\">Event Time From <span class=\"required\">*</span></label>\n              <input\n                class=\"form-control form--control ps-3\"\n                type=\"time\"\n                v-model=\"formData.event_time_from\"\n                required\n              />\n            </div>\n          </div>\n\n          <!-- Event Time To -->\n          <div class=\"col-lg-6\">\n            <div class=\"form-group\">\n              <label class=\"label-text\">Event Time To <span class=\"required\">*</span></label>\n              <input\n                class=\"form-control form--control ps-3\"\n                type=\"time\"\n                v-model=\"formData.event_time_to\"\n                required\n              />\n            </div>\n          </div>\n           <div class=\"col-lg-12\">\n             <div class=\"form-control \">\n               <label class=\"label-text\">Category <span class=\"required\">*</span></label>\n               <multiselect\n    v-model=\"selectedCategories\"\n        :options=\"categories\"\n        :multiple=\"true\"\n        :close-on-select=\"false\"\n        placeholder=\"Select categories\"\n        label=\"name\"\n        track-by=\"id\"\n     \n      >\n      </multiselect>\n             </div>\n           </div>\n           <div class=\"col-lg-12\">\n             <div class=\"form-group\">\n               <label class=\"label-text\">Website Link <span class=\"required\">*</span></label>\n               <input\n                 class=\"form-control form--control ps-3\"\n                 type=\"url\"\n                 v-model=\"formData.website_link\"\n                 required\n               />\n             </div>\n           </div>\n           <div class=\"col-lg-12\">\n             <div class=\"form-group\">\n               <label class=\"label-text\">Description <span class=\"required\">*</span></label>\n               <Editor :key=\"editorKey\" v-model:content=\"description\" />\n               <!-- <div v-html=\"description\"></div> -->\n             </div>\n           </div>\n           <div class=\"col-lg-12\">\n             <div class=\"form-group\">\n               <label class=\"label-text\">Video Link</label>\n               <input\n                 class=\"form-control form--control ps-3\"\n                 type=\"url\"\n                 v-model=\"formData.video_link\"\n               />\n             </div>\n           </div>\n           \n           <div class=\"col-lg-12\">\n             <div class=\"form-group\">\n               <label class=\"label-text\">Featured Photo <span class=\"required\">*</span></label>\n               <input\n                 class=\"form-control form--control ps-3\"\n                 type=\"file\"\n                 @change=\"handleFileUpload\"\n                 required\n               />\n               <img v-if=\"imagePreview\" :src=\"imagePreview\" class=\"img-thumbnail mt-2\" />\n             </div>\n           </div>\n          \n         </div>\n               <!-- end row -->\n             </div>\n             <!-- end card-body -->\n           </div>\n           <!-- end card -->\n       \n           <button class=\"theme-btn border-0 mt-3\" type=\"submit\">\n             Submit Listing\n           </button>\n         </form>\n       </div>\n       <!-- end container -->\n     </section>\n     <!-- end add-listing-area -->\n     <!-- ================================\n     END ADD-LISTING AREA\n ================================= -->\n \n \n </template>\n \n <script setup>\n   definePageMeta({\n  middleware: 'auth'\n})\n import { ref, onMounted, defineAsyncComponent } from 'vue';\n import Multiselect from 'vue-multiselect';\n import 'vue-multiselect/dist/vue-multiselect.css';\n \n import eventService from '~/services/eventService';\n import { useNuxtApp } from '#app';\n const selectedCategories = ref([]); // Define selectedCategories here\n\n const countries = ref([]);\n const venues = ref([]);\n const categories = ref([]);\n const formData = ref({\n   title: '',\n   user_id: '',\n   event_type: '',\n   country: '',\n   venue: '',\n   event_date_from: '', // New field\n   event_date_to: '',   // New field\n   event_time_from: '', // New field\n   event_time_to: '',   // New field\n   category: [],\n   website_link: '',\n   video_link: '',\n   featured_photo: ''\n });\n const imagePreview = ref(null);\n const description = ref('');\n const editorKey = ref(0);\n \n const fetchCountries = async () => {\n   try {\n     countries.value = await eventService.getCountries();\n   } catch (error) {\n     console.error('Error fetching countries:', error);\n   }\n };\n \n const fetchVenues = async () => {\n   try {\n     const response = await eventService.getVenuesByCountry(formData.value.country);\n     venues.value = response.data;\n   } catch (error) {\n     console.error('Error fetching venues:', error);\n   }\n };\n \n const fetchCategories = async () => {\n   try {\n     categories.value = await eventService.getCategories();\n   } catch (error) {\n     console.error('Error fetching categories:', error);\n   }\n };\n const showLocationFields = computed(() => formData.value.event_type !== 'online');\n\n const resetForm = () => {\n   formData.value = {\n     title: '',\n     user_id: '',\n     event_type: '',\n     country: '',\n     venue: '',\n     event_date_from: '', // Reset new fields\n     event_date_to: '',\n     event_time_from: '',\n     event_time_to: '',\n     category: [],\n     website_link: '',\n     video_link: '',\n     featured_photo: ''\n   };\n   selectedCategories.value = [];\n   description.value = '';\n   editorKey.value += 1;\n   imagePreview.value = null;\n   venues.value = [];\n };\n \n const handleFileUpload = (event) => {\n  const file = event.target.files[0];\n  formData.value.featured_photo = file;\n  if (file) {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      imagePreview.value = e.target.result;\n    };\n    reader.readAsDataURL(file);\n  }\n};\n\n \n const addEvent = async () => {\n   try {\n     const eventData = new FormData();\n     eventData.append('title', formData.value.title);\n     eventData.append('user_id', localStorage.getItem('user_id'));\n     eventData.append('event_type', formData.value.event_type);\n     eventData.append('country', formData.value.country);\n     eventData.append('venue', formData.value.venue);\n     eventData.append('event_date_from', formData.value.event_date_from); // Append new fields\n     eventData.append('event_date_to', formData.value.event_date_to);\n     eventData.append('event_time_from', formData.value.event_time_from);\n     eventData.append('event_time_to', formData.value.event_time_to);\n   const categoryIds = Array.isArray(selectedCategories.value) \n      ? selectedCategories.value.map(category => category.id)\n      : [];\n    eventData.append('category', JSON.stringify(categoryIds));\n     eventData.append('website_link', formData.value.website_link);\n     eventData.append('description', description.value);\n     eventData.append('video_link', formData.value.video_link);\n     eventData.append('featured_photo',  imagePreview.value);\n \n     await eventService.createEvent(eventData);\n \n     useNuxtApp().$toast.success('Event submitted successfully!', {\n       autoClose: 5000,\n       theme: \"colored\",\n       dangerouslyHTMLString: true,\n     });\n \n     resetForm();\n   } catch (error) {\n     console.error('Error adding event:', error);\n     alert('Failed to add event. Please try again.');\n   }\n };\n \n onMounted(() => {\n   fetchCountries();\n   fetchCategories();\n });\n </script>\n\n<style scoped>\n\n/* (existing styles) */\n</style>"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgQC,UAAM,qBAAqB,IAAI,CAAA,CAAE;AAEjC,UAAM,YAAY,IAAI,CAAA,CAAE;AACxB,UAAM,SAAS,IAAI,CAAA,CAAE;AACrB,UAAM,aAAa,IAAI,CAAA,CAAE;AACzB,UAAM,WAAW,IAAI;AAAA,MACnB,OAAO;AAAA,MACP,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,iBAAiB;AAAA;AAAA,MACjB,eAAe;AAAA;AAAA,MACf,iBAAiB;AAAA;AAAA,MACjB,eAAe;AAAA;AAAA,MACf,UAAU,CAAE;AAAA,MACZ,cAAc;AAAA,MACd,YAAY;AAAA,MACZ,gBAAgB;AAAA,IACnB,CAAE;AACD,UAAM,eAAe,IAAI,IAAI;AAC7B,UAAM,cAAc,IAAI,EAAE;AAC1B,UAAM,YAAY,IAAI,CAAC;AA0BvB,UAAM,qBAAqB,SAAS,MAAM,SAAS,MAAM,eAAe,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
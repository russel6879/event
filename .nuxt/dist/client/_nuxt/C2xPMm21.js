import{a as n}from"./B4uVmeYG.js";const t=n.create({baseURL:"http://127.0.0.1:8000/api",withCredentials:!1,headers:{Accept:"application/json","Content-Type":"application/json"}}),a={async getUserListings(){try{{const r=localStorage.getItem("access_token");if(!r)throw new Error("Access token not found");t.defaults.headers.common.Authorization=`Bearer ${r}`}return(await t.get("/user/listings")).data.listings}catch(e){throw console.error("Error fetching user listings:",e),e}},async getEvents(){try{return(await t.get("/events")).data}catch(e){throw console.error("Error fetching events:",e),e}},async getEvent(e){try{return(await t.get(`/events/${e}`)).data}catch(r){throw console.error(`Error fetching event with ID ${e}:`,r),r}},async getEventDetails(e){try{return(await t.get(`/event-details/${e}`)).data}catch(r){throw console.error(`Error fetching event with ID ${e}:`,r),r}},async getCountries(){try{return(await t.get("/countries")).data}catch(e){throw console.error("Error fetching countries:",e),e}},async getCategories(){try{return(await t.get("/get-categories")).data}catch(e){throw console.error("Error fetching categories:",e),e}},async getVenuesByCountry(e){try{return(await t.get(`/get-venue?country_id=${e}`)).data}catch(r){throw console.error(`Error fetching venues for country ID ${e}:`,r),r}},async createEvent(e){try{return(await t.post("/events",e)).data}catch(r){throw console.error("Error creating event:",r),r}},async updateEvent(e,r){try{return(await t.put(`/events/${e}`,r)).data}catch(o){throw console.error(`Error updating event with ID ${e}:`,o),o}},async deleteEvent(e){try{const r=localStorage.getItem("access_token");if(!r)throw new Error("Access token not found");return t.defaults.headers.common.Authorization=`Bearer ${r}`,(await t.delete(`/events/${e}`)).data}catch(r){throw console.error("Error deleting event:",r),r}}};export{a as e};
